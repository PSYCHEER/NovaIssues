name: Assign Issue to Status Based on Label

on:
  issues:
    types: [opened, labeled, edited]
  issue_comment:
    types: [created, edited]

jobs:
  assign_status:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install @octokit/rest

      - name: Assign status based on label
        env:
          TOKEN: ${{ secrets.TOKEN }}
          PROJECT_ID: PVT_kwHOAo7FNc4AzGK0
        run: |
          node -e "
          const { Octokit } = require('@octokit/rest');
          const octokit = new Octokit({ auth: process.env.TOKEN });

          async function run() {
            const context = require(process.env.GITHUB_EVENT_PATH);
            const issue = context.issue;
            const labels = issue.labels.map(label => label.name);

            console.log('Issue labels:', labels);

            let status = 'Issue'; // Default status
            if (labels.includes('bug')) {
              status = 'Issue';
            } else if (labels.includes('addon')) {
              status = 'Suggestions';
            } else if (labels.includes('enhancement')){
              status = 'Suggestions';
            }

            console.log('Determined status:', status);

            const columns = await octokit.projects.listColumns({
              project_id: process.env.PROJECT_ID
            });

            console.log('Project columns:', columns.data);

            const column = columns.data.find(col => col.name === status);
            if (!column) {
              throw new Error(`Column with status ${status} not found`);
            }

            console.log('Found column:', column);

            await octokit.projects.createCard({
              column_id: column.id,
              content_id: issue.id,
              content_type: 'Issue'
            });

            console.log('Card created in column:', column.name);
          }

          run().catch(error => console.error('Error:', error));
          "