name: Assign Issues to Project Board

on:
  issues:
    types: [opened, labeled, unlabeled, edited]
  issue_comment:
    types: [created, edited]

jobs:
  assign-to-project:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Assign issue to project board
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue;
            const labels = issue.labels.map(label => label.name);
            const projectId = '4'; // Replace with your project ID
            const columnMapping = {
              'bug': 'Issue',
              'addon': 'Suggestions',
              'enhancement': 'Suggestions'
            };

            const status = labels.map(label => columnMapping[label]).find(status => status);

            if (!status) {
              console.log('No matching label found for the issue.');
              return;
            }

            const { data: projects } = await github.rest.projects.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const project = projects.find(proj => proj.id === parseInt(projectId));

            if (!project) {
              console.log('Project not found.');
              return;
            }

            const { data: columns } = await github.rest.projects.listColumns({
              project_id: project.id
            });

            const column = columns.find(col => col.name === 'No status');

            if (!column) {
              console.log('No status column not found.');
              return;
            }

            const { data: projectCards } = await github.rest.projects.listCards({
              column_id: column.id,
              archived_state: 'not_archived'
            });

            const card = projectCards.find(card => card.content_url === issue.url);

            if (card) {
              const targetColumn = columns.find(col => col.name === status);

              if (!targetColumn) {
                console.log(`Target column ${status} not found.`);
                return;
              }

              await github.rest.projects.moveCard({
                card_id: card.id,
                position: 'top',
                column_id: targetColumn.id
              });
              console.log(`Moved issue #${issue.number} to ${status} column.`);
            } else {
              console.log(`Issue #${issue.number} is not in the 'No status' column.`);
            }