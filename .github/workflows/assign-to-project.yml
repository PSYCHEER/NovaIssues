name: Assign Issue to Project

on:
  issues:
    types: [opened, labeled, edited]
  issue_comment:
    types: [created, edited]

jobs:
  assign_to_project:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Debug event details
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_EVENT_ACTION: ${{ github.event.action }}
          GITHUB_EVENT_LABEL: ${{ github.event.label.name }}
          GITHUB_EVENT_ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          echo "Event name: $GITHUB_EVENT_NAME"
          echo "Event action: $GITHUB_EVENT_ACTION"
          echo "Event label: $GITHUB_EVENT_LABEL"
          echo "Issue number: $GITHUB_EVENT_ISSUE_NUMBER"

      - name: Assign issue to project column and update card status fields
        if: ${{ github.event.label.name == 'bug' || github.event.label.name == 'addon' || github.event.label.name == 'enhancement' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROJECT_ID: 4
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          REPO=${{ github.repository }}
          LABEL=${{ github.event.label.name }}

          if [ "$LABEL" == "bug" ]; then
            COLUMN_NAME="Issue"
          elif [ "$LABEL" == "addon" ] || [ "$LABEL" == "enhancement" ]; then
            COLUMN_NAME="Suggestions"
          fi

          echo "Label: $LABEL"
          echo "Column Name: $COLUMN_NAME"

          # Get the column ID based on the column name
          COLUMN_ID=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                           -H "Accept: application/vnd.github.inertia-preview+json" \
                           https://api.github.com/repos/$REPO/projects/$PROJECT_ID/columns | \
                     jq -r --arg COLUMN_NAME "$COLUMN_NAME" '.[] | select(.name == $COLUMN_NAME) | .id')

          echo "Column ID: $COLUMN_ID"

          # Create a project card for the issue
          CARD_ID=$(curl -s -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/projects/columns/$COLUMN_ID/cards \
            -d "{\"content_id\": $ISSUE_NUMBER, \"content_type\": \"Issue\"}" | jq -r '.id')

          echo "Card ID: $CARD_ID"

          # Update the card status fields (replace FIELD_ID and VALUE with actual values)
          curl -X PATCH \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/projects/columns/cards/$CARD_ID \
            -d "{\"note\": \"Status: Suggestions\"}" # Replace with actual status field update